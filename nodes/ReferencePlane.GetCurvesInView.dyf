<Workspace Version="1.2.3.573" X="-550.75995" Y="-31.54311875" zoom="1.33823125" ScaleFactor="1" Name="ReferencePlane.GetCurvesInView" Description="This will obtain the geometric curves of the reference plane in a given view." ID="1f40f6a5-02f4-4db1-8cb6-7a64e7b90397" Category="Rhythm.Revit.Elements.ReferencePlane">
  <NamespaceResolutionMap>
    <ClassMap partialName="Document.Current" resolvedName="Revit.Application.Document" assemblyName="RevitNodes.dll" />
    <ClassMap partialName="ReferencePlane" resolvedName="Revit.Elements.ReferencePlane" assemblyName="RevitNodes.dll" />
    <ClassMap partialName="Revit.View" resolvedName="Revit.Elements.Views.View" assemblyName="RevitNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="78b7ba90-f237-4908-91a8-e8652e9bdac0" type="PythonNodeModels.PythonNode" nickname="Python Script" x="931.713584836508" y="104" isVisible="false" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>#Copyright(c) 2017, john pierson
# @60secondrevit, http://sixtysecondrevit.com
import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

from System.Collections.Generic import *

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
def flatten(*args):
    for x in args:
        if hasattr(x, '__iter__'):
            for y in flatten(*x):
                yield y
        else:
            yield x

#unwrap all elements to use with API
rPlanes = UnwrapElement(IN[0])
view = UnwrapElement(IN[2])

#get the revit.db.line for the reference planes
revitCurves = list()
for i in rPlanes:
	try:
		revitCurves.append(i.GetCurvesInView(IN[1],view))
	except:
		revitCurves.append(list())

#convert to dynamo lines
revitCurvesFlat = flatten(revitCurves)
dynamoCurves = list()
for r in revitCurvesFlat:
	try:
		dynamoCurves.append(r.ToProtoType())
	except:
		dynamoCurves.append(list())
#Assign your output to the OUT variable
OUT = dynamoCurves</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="884f466e-b117-4c5d-8607-60448b0884fb" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="501.118515555168" y="166.732197994062" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="Flatten({item});" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="1a502c39-acc4-4c44-8e91-9ecc96fd9075" type="PythonNodeModels.PythonNode" nickname="Python Script" x="613.126689504508" y="225.506876562487" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="0">
      <Script>#Copyright(c) 2017, john pierson
# @60secondrevit, http://sixtysecondrevit.com
import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

from System.Collections.Generic import *

# Import RevitAPI
clr.AddReference("RevitAPI")
from Autodesk.Revit.DB import*

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

#unwrap all elements to use with API

TransactionManager.Instance.EnsureInTransaction(doc)
#apply lineweight override to elements in an input list


# "End" the transaction
TransactionManager.Instance.TransactionTaskDone()

#Assign your output to the OUT variable
OUT = DatumExtentType()</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="58715fea-9e95-43c9-8400-d7e2f671beba" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="167" y="158" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="referencePlane : ReferencePlane" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="1f1b9108-0a3d-499c-bf21-6a1e6be8dc65" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="285" y="291" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="view : Revit.View = Document.Current.ActiveView" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="01179b75-6c63-4d77-ae9c-7786c4177031" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1238.87963122965" y="117.208825081614" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="curve" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="ad410c51-59e6-4157-a3a4-f6384073fd58" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="Output.Clean" x="1091" y="242" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <ID value="4176dc53-ab69-4804-beb4-e006bece065c" />
      <Name value="Output.Clean" />
      <Description value="This will return a single value or list from one input." />
      <Inputs>
        <Input value="input" />
      </Inputs>
      <Outputs>
        <Output value="result" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="78b7ba90-f237-4908-91a8-e8652e9bdac0" start_index="0" end="ad410c51-59e6-4157-a3a4-f6384073fd58" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="884f466e-b117-4c5d-8607-60448b0884fb" start_index="0" end="78b7ba90-f237-4908-91a8-e8652e9bdac0" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1a502c39-acc4-4c44-8e91-9ecc96fd9075" start_index="0" end="78b7ba90-f237-4908-91a8-e8652e9bdac0" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="58715fea-9e95-43c9-8400-d7e2f671beba" start_index="0" end="884f466e-b117-4c5d-8607-60448b0884fb" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1f1b9108-0a3d-499c-bf21-6a1e6be8dc65" start_index="0" end="78b7ba90-f237-4908-91a8-e8652e9bdac0" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="ad410c51-59e6-4157-a3a4-f6384073fd58" start_index="0" end="01179b75-6c63-4d77-ae9c-7786c4177031" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>